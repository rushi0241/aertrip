import React, { useEffect, useState } from "react";
import "./Header.css";
import Logo from "../assets/logo.svg";
import sun from "../assets/sun.svg";
import moon from "../assets/moon.svg";
import switchImg from "../assets/switch.svg";
import data from "../API/api-data.json";
const Header = ({ theme, loading, ...props }) => {
  const [themes, setThemes] = useState(true);
  const [switchInputs, setSwitchInputs] = useState(false);
  const [results, setResults] = useState();
  const [flights, setFlights] = useState([]);
  props.filterfy(flights);
  const [formData, setFormData] = useState({
    from: "",
    to: "",
    errors: {},
    loading: loading,
  });

  const fldata = data[0].data[0].flights;
  const fromDatas = Object.entries(fldata[0].results.apdet);
  const toDatas = Object.entries(fldata[1].results.apdet);
  const result = Object.entries(fldata[1].results.j[1].leg[0].flights);
  const formDB = result.map((item, index) => {
    return item.map((it, inde) => {
      return it;
    });
  });
  function filter(data) {
    let cx = [data.from.slice(0, 3), data.to.slice(0, 3)];
    setFlights(cx);
  }
  const switchColor = () => {
    setThemes(!themes);
    theme(themes);
  };
  const menu = [
    {
      menuName: "Flight",
      active: true,
    },
    {
      menuName: "Hotel",
      active: false,
    },
    {
      menuName: "Visa",
      active: false,
    },
    {
      menuName: "AI Trip",
      active: false,
    },
    {
      menuName: "Group Tour",
      active: false,
    },
  ];
  const menuList = menu.map((item, index) => {
    return (
      <li className={item.active == true ? "active" : ""}>{item.menuName}</li>
    );
  });
  const handleChange = (event) => {
    const { name, value } = event.target;
    setFormData((prevState) => ({ ...prevState, [name]: value }));
  };

  const validateForm = () => {
    const errors = {};
    if (!formData.from) {
      errors.from = "From is required";
    }
    if (!formData.to) {
      errors.to = "To is required";
    }
    setFormData((prevState) => ({ ...prevState, errors }));
    return Object.keys(errors).length === 0;
  };
  const handleSubmit = (event) => {
    event.preventDefault();

    setResults(formDB);
    if (validateForm()) {
      setFormData({
        ...formData,
        loading: loading(true),
      });
      setTimeout(() => {
        setFormData({
          from: "",
          to: "",
          errors: "",
          loading: loading(false),
        });
      }, 2000);
    } else {
    }
  };
  const switchInput = () => {
    setSwitchInputs(!switchInputs);
  };
  return (
    <>
      <div className="header">
        {
          <svg
            xmlns="http://www.w3.org/2000/svg"
            width="199"
            height="60"
            viewBox="0 0 199 60"
          >
            <g fill="none" fill-rule="evenodd">
              <g fill="#FFF">
                <g>
                  <g>
                    <g>
                      <path
                        d="M5.937 0c.096 0 .184.05.236.128l.032.065L11.17 14.7c.056.163-.042.331-.198.37l-.07.01H9.496c-.097 0-.186-.05-.238-.13l-.03-.066-1.026-3.086H2.984L1.96 14.884c-.024.07-.072.126-.133.16l-.065.026-.071.01H.284c-.17 0-.297-.149-.283-.31l.015-.07L4.982.193C5.014.1 5.09.033 5.18.009L5.25 0h.687zm24.81 0c.135 0 .247.094.277.22l.007.066v1.227c0 .136-.093.249-.218.279l-.065.007-7.269-.001v4.78l5.037.001c.108 0 .201.06.25.15l.026.07.008.066v1.228c0 .135-.093.248-.219.278l-.065.007H23.48v4.902h7.269c.107 0 .2.06.249.15l.027.07.007.066v1.228c0 .135-.093.248-.218.278l-.065.007h-8.892c-.134 0-.247-.094-.276-.22l-.008-.065V.286c0-.136.094-.249.219-.278L21.856 0h8.892zm16.468 0C49.56 0 51.5 1.927 51.5 4.259c0 1.664-1.018 3.138-2.569 3.854l-.215.093-.126.046 3.253 6.412c.075.147.01.317-.124.385l-.06.022-.068.008h-1.465c-.077 0-.15-.031-.203-.086l-.045-.061-.7-1.296c-.466-.882-.908-1.764-2.138-4.262l-.423-.857h-2.704v6.277c0 .108-.06.202-.148.25l-.07.028-.066.007h-1.305c-.134 0-.246-.094-.276-.22l-.007-.065V.286c0-.136.093-.249.218-.278L42.323 0h4.892zM72.45 0c.134 0 .247.094.276.22l.008.066v1.227c0 .136-.094.249-.219.279l-.065.007-4.144-.001v12.996c0 .108-.06.202-.147.25l-.071.028-.065.007h-1.359c-.134 0-.246-.094-.276-.22l-.007-.065V1.798l-4.126.001c-.107 0-.2-.06-.249-.149l-.027-.071-.007-.066V.286c0-.136.093-.249.218-.278L62.255 0H72.45zm15.825 0c2.345 0 4.283 1.927 4.283 4.259 0 1.664-1.018 3.138-2.568 3.854l-.215.093-.126.046 3.253 6.412c.075.147.009.317-.124.385l-.06.022-.068.008h-1.465c-.078 0-.15-.031-.203-.086l-.045-.061-.7-1.296c-.467-.882-.908-1.764-2.139-4.262l-.422-.857H84.97v6.277c0 .108-.06.202-.147.25l-.071.028-.065.007h-1.305c-.134 0-.247-.094-.276-.22l-.008-.065V.286c0-.136.094-.249.219-.278L83.383 0h4.892zm16.952 0c.134 0 .246.094.276.22l.007.066v14.508c0 .135-.093.248-.218.278l-.065.007h-1.377c-.134 0-.246-.094-.276-.22l-.007-.065V.286c0-.136.093-.249.218-.278L103.85 0h1.377zm16.7 0c2.37 0 4.318 1.917 4.318 4.259 0 2.289-1.815 4.156-4.096 4.27l-.222.006-3.269-.001v6.26c0 .108-.059.202-.147.25l-.07.028-.066.007h-1.34c-.135 0-.247-.094-.277-.22l-.007-.065V.286c0-.136.093-.249.218-.278l.065-.008h4.893zM5.6 4.21l-1.963 5.806h3.912l-1.95-5.805zm41.615-2.307h-3.303v4.711h3.303c1.327 0 2.394-1.036 2.394-2.32 0-1.273-.97-2.298-2.221-2.385l-.173-.006zm41.06 0h-3.304v4.711h3.304c1.327 0 2.393-1.036 2.393-2.32 0-1.273-.969-2.298-2.22-2.385l-.173-.006zm33.652.018h-3.269v4.693h3.269c1.327 0 2.393-1.054 2.393-2.355 0-1.24-.97-2.247-2.221-2.333l-.172-.005z"
                        transform="translate(-11 3) translate(0 -3) translate(11) translate(57 23)"
                      />
                    </g>
                    <g>
                      <path
                        d="M13.502 0l.13.009.118.024c.233.063.435.213.564.422l.058.11.026.074 12.528 28.048c.037.088.061.18.074.304.004.274-.068.497-.23.687-.18.204-.437.32-.718.32l-.122-.006-.135-.027-12.27-3.504-12.323 3.504c-.275.076-.564.025-.794-.131l-.094-.074-.086-.086c-.178-.206-.257-.475-.218-.753l.023-.12.046-.128L12.594.66c.063-.192.181-.356.349-.478l.107-.068.126-.057.072-.023c.082-.023.168-.035.254-.035zm1.97 7.692l2.503 16.693c.01.39-.152.72-.454.906l-.106.057-.119.043-.344.098 7.411 2.106-8.892-19.903zm-3.944-.01L2.632 27.595l7.41-2.106-.34-.098c-.37-.106-.635-.423-.679-.808l-.006-.117.01-.12 2.501-16.664zm1.97-.379l-2.476 16.504 2.446.709 2.507-.713-2.476-16.5z"
                        transform="translate(-11 3) translate(0 -3) translate(11) translate(15 15)"
                      />
                    </g>
                  </g>
                </g>
              </g>
            </g>
            <script
              xmlns="http://www.w3.org/2000/svg"
              type="text/javascript"
              src="chrome-extension://hejbmebodbijjdhflfknehhcgaklhano/../window/testing-library.js"
            />
          </svg>
        }
        <ul>{menuList}</ul>
        <div
          onClick={switchColor}
          style={{ display: "flex", cursor: "pointer" }}
        >
          {themes ? (
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="30"
              height="30"
              viewBox="0 0 30 30"
            >
              <path
                d="M15 9.234a.743.743 0 0 0 .549-.233.75.75 0 0 0 .23-.543V6.776a.75.75 0 0 0-.23-.543A.743.743 0 0 0 15 6a.733.733 0 0 0-.54.233.75.75 0 0 0-.23.543v1.682a.75.75 0 0 0 .23.543.733.733 0 0 0 .54.233zm4.625 1.924a.753.753 0 0 0 .554-.225l1.201-1.19a.765.765 0 0 0 .217-.552.75.75 0 0 0-.225-.552.71.71 0 0 0-.545-.22.739.739 0 0 0-.545.229l-1.21 1.199a.754.754 0 0 0-.216.543c0 .213.072.397.216.552.15.144.334.216.553.216zm-9.255 0a.75.75 0 0 0 .774-.768c0-.218-.072-.4-.216-.543l-1.193-1.2a.775.775 0 0 0-.55-.223.677.677 0 0 0-.54.215.735.735 0 0 0-.233.552c0 .219.072.4.216.544l1.202 1.198a.72.72 0 0 0 .54.225zM15 19.239c.576 0 1.121-.112 1.634-.336a4.383 4.383 0 0 0 2.274-2.269 4.03 4.03 0 0 0 .337-1.638 4.03 4.03 0 0 0-.337-1.639 4.372 4.372 0 0 0-.921-1.35 4.322 4.322 0 0 0-1.353-.914A4.08 4.08 0 0 0 15 10.761a4.07 4.07 0 0 0-1.638.332c-.51.221-.961.526-1.353.914a4.274 4.274 0 0 0-.921 1.35 4.074 4.074 0 0 0-.333 1.639c0 .58.111 1.127.333 1.638.222.512.529.962.92 1.35.393.388.844.694 1.354.919.51.224 1.056.336 1.638.336zm8.23-3.467a.74.74 0 0 0 .54-.229.746.746 0 0 0 .23-.547.736.736 0 0 0-.23-.54.74.74 0 0 0-.54-.228h-1.685a.75.75 0 0 0-.55.229.736.736 0 0 0-.228.539c0 .212.076.395.229.547a.75.75 0 0 0 .549.229h1.686zm-14.766 0a.74.74 0 0 0 .54-.229.746.746 0 0 0 .23-.547.736.736 0 0 0-.23-.54.74.74 0 0 0-.54-.228H6.778a.75.75 0 0 0-.549.229.736.736 0 0 0-.229.539c0 .212.076.395.23.547a.75.75 0 0 0 .548.229h1.686zm12.367 5.804c.217 0 .4-.074.55-.224a.76.76 0 0 0 .216-.547.73.73 0 0 0-.217-.54l-1.21-1.198a.763.763 0 0 0-.549-.216c-.216 0-.4.072-.549.216a.76.76 0 0 0-.216.547.76.76 0 0 0 .216.548l1.22 1.199a.734.734 0 0 0 .54.215zm-11.667-.004a.738.738 0 0 0 .554-.22l1.201-1.19a.744.744 0 0 0 .225-.548.753.753 0 0 0-.77-.763.74.74 0 0 0-.544.216l-1.21 1.19a.745.745 0 0 0-.22.539.73.73 0 0 0 .22.548c.144.15.325.225.544.228zM15 24a.743.743 0 0 0 .549-.233.76.76 0 0 0 .23-.552v-1.673a.746.746 0 0 0-.23-.548.75.75 0 0 0-.549-.228.74.74 0 0 0-.54.228.746.746 0 0 0-.23.548v1.673a.76.76 0 0 0 .23.552A.733.733 0 0 0 15 24z"
                fill="#FFF"
                fill-rule="evenodd"
              />
              <script
                xmlns=""
                type="text/javascript"
                src="chrome-extension://hejbmebodbijjdhflfknehhcgaklhano/../window/testing-library.js"
              />
            </svg>
          ) : (
            <svg
              xmlns="http://www.w3.org/2000/svg"
              width="30px"
              height="30px"
              viewBox="0 0 30 30"
              version="1.1"
            >
              <title>BF184F35-072B-44CB-8620-9482E4297254</title>
              <g
                id="🏨-Hotel+"
                stroke="none"
                stroke-width="1"
                fill="none"
                fill-rule="evenodd"
              >
                <g
                  id="Curated-Hotel-0"
                  transform="translate(-1087.000000, -12.000000)"
                  fill="#FFFFFF"
                >
                  <g id="Hero" transform="translate(0.000000, -3.000000)">
                    <g id="Group" transform="translate(1082.000000, 3.000000)">
                      <g
                        id="Icons/Mode/-Dark"
                        transform="translate(5.000000, 12.000000)"
                      >
                        <path
                          d="M13.8698407,7.49789739 C14.0530944,7.49789739 14.2026618,7.56248949 14.3185429,7.69167368 C14.4344239,7.82085786 14.4923644,7.95811606 14.4923644,8.10344828 C14.4923644,8.18957107 14.4829322,8.27165685 14.4640679,8.34970563 C14.4452035,8.42775442 14.4034325,8.52598823 14.3387547,8.64440706 C14.1986195,8.91892347 14.0854333,9.29301934 13.9991963,9.7666947 C13.9129592,10.2403701 13.8698407,10.7597981 13.8698407,11.324979 C13.8698407,12.6544996 14.1406789,13.8023549 14.6823554,14.768545 C15.224032,15.7347351 15.9947757,16.4788898 16.9945865,17.0010093 C17.9943974,17.5231287 19.1815044,17.7841884 20.5559075,17.7841884 C20.8523474,17.7841884 21.1474398,17.7680404 21.4411848,17.7357443 C21.7349298,17.7034483 22.0138528,17.6563499 22.2779538,17.5944491 C22.5420547,17.5325484 22.7738168,17.4639193 22.97324,17.3885618 C23.0756465,17.3401177 23.1605361,17.310513 23.2279088,17.2997477 C23.2952815,17.2889823 23.3666966,17.2835997 23.442154,17.2835997 C23.5768994,17.2835997 23.7035601,17.3360807 23.8221361,17.4410429 C23.940712,17.546005 24,17.6899916 24,17.8730025 C24,17.9214466 23.9919153,17.98873 23.9757458,18.0748528 C23.9595764,18.1609756 23.9272375,18.2605551 23.8787291,18.3735913 C23.4583235,19.3263246 22.8896979,20.1485282 22.1728523,20.8402019 C21.4560068,21.5318755 20.6219328,22.0647603 19.6706302,22.4388562 C18.7193277,22.8129521 17.6912203,23 16.586308,23 C15.4274975,23 14.3589665,22.800841 13.3807149,22.4025231 C12.4024632,22.0042052 11.5522198,21.4444071 10.8299844,20.7231287 C10.107749,20.0018503 9.54855562,19.1540791 9.15240414,18.179815 C8.75625266,17.2055509 8.55817692,16.1343987 8.55817692,14.9663583 C8.55817692,13.9005887 8.76298993,12.8778806 9.17261595,11.8982338 C9.58224197,10.918587 10.152215,10.0560135 10.8825351,9.31051304 C11.6128552,8.56501262 12.452319,7.99848612 13.4009267,7.61093356 C13.5195026,7.56787216 13.6192142,7.53826745 13.7000615,7.52211943 C13.7809087,7.5059714 13.8375018,7.49789739 13.8698407,7.49789739 Z M6.6214825,18.2939066 L7.12254815,19.3078312 L8.242965,19.4704216 L7.43222375,20.2596519 L7.62361379,21.3740629 L6.6214825,20.8479094 L5.6193512,21.3740629 L5.81074125,20.2596519 L5,19.4704216 L6.12041685,19.3078312 L6.6214825,18.2939066 Z M19.3205009,7.51335939 L20.0003281,8.88901458 L21.520468,9.10961115 L20.4204844,10.1804094 L20.6801553,11.6924008 L19.3205009,10.9785353 L17.9608465,11.6924008 L18.2205174,10.1804094 L17.1205339,9.10961115 L18.6406737,8.88901458 L19.3205009,7.51335939 Z M6.86527591,7 L7.28283062,7.84493721 L8.21651133,7.98042919 L7.54089362,8.63812109 L7.70038533,9.56679695 L6.86527591,9.12833568 L6.0301665,9.56679695 L6.18965821,8.63812109 L5.5140405,7.98042919 L6.44772121,7.84493721 L6.86527591,7 Z"
                          id="Combined-Shape"
                        />
                      </g>
                    </g>
                  </g>
                </g>
              </g>
              <script
                xmlns=""
                type="text/javascript"
                src="chrome-extension://hejbmebodbijjdhflfknehhcgaklhano/../window/testing-library.js"
              />
            </svg>
          )}
        </div>
        <div style={{ textAlign: "center" }}>Trips</div>
        <div style={{ textAlign: "center" }}>Profile</div>
      </div>
      <div className="search-container">
        <div className="search-inner">
          <form onSubmit={handleSubmit}>
            <div style={{ width: "100%" }}>
              <select
                type="text"
                name="from"
                value={formData.from}
                onChange={handleChange}
              >
                <option>From</option>
                {fromDatas.map((item, index) => {
                  return (
                    <option key={index} value={item[0]}>
                      {item[1].c}, {item[1].cn}
                    </option>
                  );
                })}
              </select>
              {formData.errors.from && (
                <p
                  style={{
                    color: "red",
                    padding: "0",
                    margin: "0",
                    fontSize: "10px",
                  }}
                >
                  {formData.errors.from}
                </p>
              )}
            </div>
            <div
              onClick={switchInput}
              className={switchInputs ? "switch-input" : "active"}
            >
              <svg
                xmlns="http://www.w3.org/2000/svg"
                width="30"
                height="30"
                viewBox="0 0 30 30"
              >
                <g fill="none" fill-rule="evenodd">
                  <g>
                    <path
                      fill="#000"
                      d="M11.776 14.965c.268.264.296.68.08.976l-.071.085-1.746 1.775L20.25 17.8c.414 0 .75.336.75.75 0 .38-.282.693-.648.743l-.102.007-10.214.001 1.645 1.673c.264.269.285.686.065.977l-.074.084c-.268.264-.685.284-.977.064l-.083-.073-2.897-2.947c-.066-.067-.116-.143-.152-.224l-.034-.094-.022-.106c-.005-.034-.007-.07-.007-.105 0-.184.066-.352.176-.483l3.04-3.093c.29-.295.764-.3 1.06-.009zm7.529-7.014l.083.073 2.897 2.947c.066.067.116.143.152.224l.034.094.022.106c.005.034.007.07.007.105 0 .184-.066.352-.176.483l-3.04 3.093c-.29.295-.764.3-1.06.009-.268-.264-.296-.68-.08-.976l.071-.085 1.746-1.775-10.211.001c-.414 0-.75-.336-.75-.75 0-.38.282-.693.648-.743l.102-.007 10.214-.001-1.645-1.673c-.264-.269-.285-.686-.065-.977l.074-.084c.268-.264.685-.284.977-.064z"
                    />
                    <circle cx="15" cy="15" r="20" />
                  </g>
                </g>
                <script
                  xmlns=""
                  type="text/javascript"
                  src="chrome-extension://hejbmebodbijjdhflfknehhcgaklhano/../window/testing-library.js"
                />
              </svg>
            </div>
            <div style={{ width: "100%" }}>
              <select
                type="text"
                name="to"
                value={formData.to}
                onChange={handleChange}
              >
                <option>To</option>
                {toDatas.map((item, index) => {
                  return (
                    <option key={index} value={item[0]}>
                      {item[1].c}, {item[1].cn}
                    </option>
                  );
                })}
              </select>
              {formData.errors.to && (
                <p
                  style={{
                    color: "red",
                    padding: "0",
                    margin: "0",
                    fontSize: "10px",
                  }}
                >
                  {formData.errors.to}
                </p>
              )}
            </div>
            <button onClick={() => filter(formData)} className="search-btn">
              Search
            </button>
          </form>
        </div>
      </div>
    </>
  );
};

export default Header;
